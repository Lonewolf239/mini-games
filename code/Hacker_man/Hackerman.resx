<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="win_timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>