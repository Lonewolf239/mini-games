<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="logic.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>